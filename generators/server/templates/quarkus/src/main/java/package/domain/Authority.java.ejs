<%#
 Copyright 2020-2022 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%=packageName%>.domain;

<%_ if (databaseType === 'sql') { _%>
import io.quarkus.hibernate.orm.panache.PanacheEntityBase;
<%_ } _%>
<%_ if (databaseType === 'mongodb') { _%>
import io.quarkus.mongodb.panache.common.MongoEntity;
import io.quarkus.mongodb.panache.PanacheMongoEntityBase;
import io.quarkus.mongodb.panache.PanacheMongoEntityBase;
import org.bson.codecs.pojo.annotations.BsonId;
<%_ } _%>
import io.quarkus.runtime.annotations.RegisterForReflection;
import java.io.Serializable;
import java.util.Objects;
<%_ if (databaseType === 'sql') { _%>
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
<%_ } _%>
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
<%_ if (enableHibernateCache) { _%>
import javax.persistence.*;
<%_ } _%>

/**
 * An authority (a security role).
 */
<%_ if (databaseType === 'sql') { _%>
@Entity
@Table(name = "<%= jhiTablePrefix %>_authority")
<%_ if (enableHibernateCache) { _%>
@Cacheable
<%_ } _%>
<%_ } else if (databaseType === 'mongodb') { _%>
@MongoEntity(collection="<%= jhiTablePrefix %>_authority")
<%_ } _%>
@RegisterForReflection
public class Authority <% if (databaseType === 'sql') { %>extends PanacheEntityBase <% } else if (databaseType === 'mongodb') { %>extends PanacheMongoEntityBase <% }%>implements Serializable {
    private static final long serialVersionUID = 1L;

    @NotNull
    @Size(max = 50)
<%_ if (databaseType === 'sql') { _%>
    @Id
    @Column(length = 50)
<%_ } _%>
<%_ if (databaseType === 'mongodb') { _%>
    @BsonId
<%_ } _%>
    public String name;

    public Authority() {
        //empty
    }

    public Authority(String name) {
        //for jsonb
        this.name = name;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Authority)) {
            return false;
        }
        return Objects.equals(name, ((Authority) o).name);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(name);
    }

    @Override
    public String toString() {
        return "Authority{" + "name='" + name + '\'' + "}";
    }
}
