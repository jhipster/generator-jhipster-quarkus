package <%=packageName%>;

import java.lang.annotation.Annotation;
import java.util.Arrays;
import java.util.List;

@SuppressWarnings("rawtypes")
public class AssertAnnotations {
	
	// Assert that the annotations exist
	private static void assertAnnotations(List<Class> annotationClasses, List<Annotation> annotations) {
		annotationClasses.forEach(annotationClass -> {
			long icount = annotations.stream().filter(a -> a.annotationType().isAssignableFrom(annotationClass)).count();
			if (icount == 0) {
				throw new AssertionError(String.format("No annotation of type %s was found", annotationClass.getName()));
			}
		});
	}

	// Assert the Class annotation
	public static void assertType(Class c, Class... annotationClasses) {
		assertAnnotations(Arrays.asList(annotationClasses), Arrays.asList(c.getAnnotations()));
	}

	// Assert the Field annotation
	public static void assertField(Class c, String fieldName, Class... annotationClasses) {
		try {
			assertAnnotations(Arrays.asList(annotationClasses),
					Arrays.asList(c.getDeclaredField(fieldName).getAnnotations()));
		} catch (NoSuchFieldException nsfe) {
			throw new AssertionError(nsfe);
		}
	}

	// Assert the Method annotation
	@SuppressWarnings("unchecked")
	public static void assertMethod(Class c, String getterName, Class... annotationClasses) {
		try {
			assertAnnotations(Arrays.asList(annotationClasses),
					Arrays.asList(c.getDeclaredMethod(getterName).getAnnotations()));
		} catch (NoSuchMethodException nsfe) {
			throw new AssertionError(nsfe);
		}
	}
}
